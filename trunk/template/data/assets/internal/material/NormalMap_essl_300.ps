#version 300 es
precision mediump float;
precision highp int;

struct Light
{
    highp vec3 Dir;
    int Type;
    highp vec3 Color;
    highp vec3 Attenuation;
    highp float Range;
    highp vec3 Position;
    highp float SpotAngle;
};

struct type_LightBuffer
{
    int _LightCount;
    highp vec3 _LightDir0;
    highp vec3 _LightColor0;
    Light _Light[8];
};

uniform type_LightBuffer LightBuffer;

struct type_CommbonRarelyBuffer
{
    highp vec3 _LIGHTMODEL_AMBIENT;
    int _FogMode;
    highp vec4 _FogColor;
    highp float _FogStart;
    highp float _FogEnd;
    highp float _FogDensity;
};

uniform type_CommbonRarelyBuffer CommbonRarelyBuffer;

uniform highp sampler2D _MainTex;
uniform highp sampler2D _NormalTexture;

in highp vec2 varying_TEXCOORD0;
in highp vec3 varying_TEXCOORD1;
in highp float in_var_TEXCOORD2;
layout(location = 0) out highp vec4 out_var_SV_Target;

void main()
{
    highp vec4 _51 = texture(_MainTex, varying_TEXCOORD0);
    out_var_SV_Target = vec4((CommbonRarelyBuffer._LIGHTMODEL_AMBIENT + (LightBuffer._LightColor0 * vec3((dot((texture(_NormalTexture, varying_TEXCOORD0).xyz * 2.0) - vec3(1.0), varying_TEXCOORD1) * 0.5) + 0.5))) * _51.xyz, _51.w);
}

