#version 320 es
precision mediump float;
precision highp int;

struct Light
{
    highp vec3 Dir;
    int Type;
    highp vec3 Color;
    highp vec3 Attenuation;
    highp float Range;
    highp vec3 Position;
    highp float SpotAngle;
};

struct type_CameraBuffer
{
    highp mat4 MATRIX_V;
    highp mat4 MATRIX_P;
    highp mat4 MATRIX_VP;
    highp mat4 MATRIX_I_VP;
    highp vec3 _WorldSpaceCameraPos;
    highp vec3 _WorldSpaceCameraDir;
    highp vec4 _ProjectionParams;
    highp vec4 _ScreenParams;
    highp vec4 _ZBufferParams;
};

uniform type_CameraBuffer CameraBuffer;

struct type_LightBuffer
{
    int _LightCount;
    highp vec3 _LightDir0;
    highp vec3 _LightColor0;
    Light _Light[8];
};

uniform type_LightBuffer LightBuffer;

struct type_CommbonRarelyBuffer
{
    highp vec3 _LIGHTMODEL_AMBIENT;
    int _FogMode;
    highp vec4 _FogColor;
    highp float _FogStart;
    highp float _FogEnd;
    highp float _FogDensity;
};

uniform type_CommbonRarelyBuffer CommbonRarelyBuffer;

struct type_CustomBuffer
{
    highp vec4 _MainTex_ST;
    highp float _SpecularPower;
    highp float _Reflections;
};

uniform type_CustomBuffer CustomBuffer;

uniform highp sampler2D _MainTex;
uniform highp sampler2D _NormalTexture;
uniform highp samplerCube _SkyBox;

layout(location = 0) in highp vec2 in_var_TEXCOORD0;
layout(location = 1) in highp mat3 in_var_TEXCOORD1;
layout(location = 4) in highp vec3 in_var_TEXCOORD4;
layout(location = 5) in highp vec3 in_var_TEXCOORD5;
layout(location = 6) in highp vec3 in_var_TEXCOORD6;
layout(location = 7) in highp float in_var_TEXCOORD7;
layout(location = 0) out highp vec4 out_var_SV_Target;

void main()
{
    highp vec4 _83 = texture(_MainTex, in_var_TEXCOORD0);
    highp vec4 _87 = texture(_NormalTexture, in_var_TEXCOORD0);
    highp vec3 _92 = normalize(in_var_TEXCOORD1 * ((_87.xyz * 2.0) - vec3(1.0)));
    highp vec3 _96;
    _96 = vec3(0.0);
    highp vec3 _97;
    for (int _99 = 0; _99 < LightBuffer._LightCount; _96 = _97, _99++)
    {
        highp float _165;
        highp vec3 _166;
        if (LightBuffer._Light[_99].Type == 0)
        {
            _165 = 1.0;
            _166 = -LightBuffer._LightDir0;
        }
        else
        {
            highp float _163;
            highp vec3 _164;
            if (LightBuffer._Light[_99].Type == 1)
            {
                highp vec3 _126 = LightBuffer._Light[_99].Position - in_var_TEXCOORD4;
                highp float _127 = length(_126);
                if (_127 > LightBuffer._Light[_99].Range)
                {
                    _97 = _96;
                    continue;
                }
                _163 = 1.0 / dot(LightBuffer._Light[_99].Attenuation, vec3(1.0, _127, _127 * _127));
                _164 = _126;
            }
            else
            {
                highp float _161;
                highp vec3 _162;
                if (LightBuffer._Light[_99].Type == 2)
                {
                    highp vec3 _138 = LightBuffer._Light[_99].Position - in_var_TEXCOORD4;
                    if (dot(_138, _92) <= 0.0)
                    {
                        _97 = _96;
                        continue;
                    }
                    highp float _143 = length(_138);
                    if (_143 > LightBuffer._Light[_99].Range)
                    {
                        _97 = _96;
                        continue;
                    }
                    highp float _152 = max(0.0, dot(-normalize(_138), LightBuffer._Light[_99].Dir));
                    if (_152 <= cos(LightBuffer._Light[_99].SpotAngle * 0.01745329983532428741455078125))
                    {
                        _97 = _96;
                        continue;
                    }
                    _161 = pow(_152, 2.0) / dot(LightBuffer._Light[_99].Attenuation, vec3(1.0, _143, _143 * _143));
                    _162 = _138;
                }
                else
                {
                    _161 = 1.0;
                    _162 = vec3(0.0);
                }
                _163 = _161;
                _164 = _162;
            }
            _165 = _163;
            _166 = _164;
        }
        _97 = _96 + ((LightBuffer._Light[_99].Color * vec3(max(0.0, dot(_92, normalize(_166))))) * _165);
    }
    highp vec3 _176 = (CommbonRarelyBuffer._LIGHTMODEL_AMBIENT + _96) * _83.xyz;
    highp vec3 _195;
    if (CustomBuffer._Reflections > 0.0)
    {
        _195 = mix(_176, texture(_SkyBox, normalize(reflect(normalize(in_var_TEXCOORD4 - CameraBuffer._WorldSpaceCameraPos), in_var_TEXCOORD6))).xyz, vec3(CustomBuffer._Reflections));
    }
    else
    {
        _195 = _176;
    }
    highp vec4 _200 = vec4(_195, _83.w);
    highp float _236;
    if (CommbonRarelyBuffer._FogMode == 1)
    {
        _236 = clamp((CommbonRarelyBuffer._FogEnd - in_var_TEXCOORD7) / (CommbonRarelyBuffer._FogEnd - CommbonRarelyBuffer._FogStart), 0.0, 1.0);
    }
    else
    {
        highp float _235;
        if (CommbonRarelyBuffer._FogMode == 2)
        {
            _235 = exp(-(CommbonRarelyBuffer._FogDensity * in_var_TEXCOORD7));
        }
        else
        {
            highp float _234;
            if (CommbonRarelyBuffer._FogMode == 3)
            {
                _234 = exp((((-CommbonRarelyBuffer._FogDensity) * CommbonRarelyBuffer._FogDensity) * in_var_TEXCOORD7) * in_var_TEXCOORD7);
            }
            else
            {
                _234 = 1.0;
            }
            _235 = _234;
        }
        _236 = _235;
    }
    highp vec3 _242 = mix(CommbonRarelyBuffer._FogColor.xyz, _200.xyz, vec3(_236));
    out_var_SV_Target = vec4(_242.x, _242.y, _242.z, _200.w);
}

