#version 320 es
precision mediump float;
precision highp int;

struct type_CameraBuffer
{
    highp mat4 MATRIX_V;
    highp mat4 MATRIX_P;
    highp mat4 MATRIX_VP;
    highp mat4 MATRIX_I_VP;
    highp vec3 _WorldSpaceCameraPos;
    highp vec3 _WorldSpaceCameraDir;
    highp vec4 _ProjectionParams;
    highp vec4 _ScreenParams;
    highp vec4 _ZBufferParams;
};

uniform type_CameraBuffer CameraBuffer;

struct type_CustomBuffer
{
    highp vec4 _MainTex_TexelSize;
    highp vec4 _Intensity;
    highp mat4 _PRE_MATRIX_VP;
};

uniform type_CustomBuffer CustomBuffer;

uniform highp sampler2D _MainTex;

layout(location = 0) in highp vec2 in_var_TEXCOORD0;
layout(location = 0) out highp vec4 out_var_SV_Target;

void main()
{
    highp vec4 _53 = vec4((in_var_TEXCOORD0.x * 2.0) - 1.0, (in_var_TEXCOORD0.y * 2.0) - 1.0, 1.0, 1.0);
    highp vec4 _56 = _53 * CameraBuffer.MATRIX_I_VP;
    highp vec4 _62 = (_56 / vec4(_56.w)) * CustomBuffer._PRE_MATRIX_VP;
    highp vec2 _73 = ((_53.xy - (_62 / vec4(_62.w)).xy) * vec2(0.5)) * CustomBuffer._Intensity.xy;
    highp vec2 _76;
    highp vec4 _79;
    _76 = in_var_TEXCOORD0 + _73;
    _79 = texture(_MainTex, in_var_TEXCOORD0);
    for (int _81 = 1; _81 < 3; )
    {
        highp vec4 _86 = texture(_MainTex, _76);
        _76 += _73;
        _79 += _86;
        _81++;
        continue;
    }
    out_var_SV_Target = _79 * vec4(0.3333333432674407958984375);
}

