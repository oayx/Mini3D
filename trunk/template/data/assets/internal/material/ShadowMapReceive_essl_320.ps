#version 320 es
precision mediump float;
precision highp int;

struct type_CommbonRarelyBuffer
{
    highp vec3 _LIGHTMODEL_AMBIENT;
    int _FogMode;
    highp vec4 _FogColor;
    highp float _FogStart;
    highp float _FogEnd;
    highp float _FogDensity;
};

uniform type_CommbonRarelyBuffer CommbonRarelyBuffer;

struct type_CustomBuffer
{
    highp mat4 MATRIX_MVP_LIGHT;
    highp vec4 _MainTex_ST;
    highp vec4 _ShadowMap_TexelSize;
    highp float _Bias;
    int _ShadowType;
};

uniform type_CustomBuffer CustomBuffer;

uniform highp sampler2D _MainTex;
uniform highp sampler2D _ShadowMap;

layout(location = 0) in highp vec2 in_var_TEXCOORD0;
layout(location = 1) in highp vec4 in_var_TEXCOORD1;
layout(location = 2) in highp float in_var_TEXCOORD2;
layout(location = 0) out highp vec4 out_var_SV_Target;

void main()
{
    highp vec4 _59 = texture(_MainTex, in_var_TEXCOORD0);
    highp float _131;
    if (CustomBuffer._ShadowType != 0)
    {
        highp vec2 _70 = ((in_var_TEXCOORD1.xy / vec2(in_var_TEXCOORD1.w)) * 0.5) + vec2(0.5);
        highp vec2 _72 = _70;
        _72.y = _70.y;
        highp float _76 = (0.5 * (in_var_TEXCOORD1.z / in_var_TEXCOORD1.w)) + 0.5;
        highp float _130;
        if (CustomBuffer._ShadowType == 2)
        {
            highp float _84;
            int _87;
            _84 = 0.0;
            _87 = -1;
            highp float _85;
            for (; _87 <= 1; _84 = _85, _87++)
            {
                _85 = _84;
                for (int _95 = -1; _95 <= 1; )
                {
                    _85 += float((_76 - CustomBuffer._Bias) > texture(_ShadowMap, _72 + (vec2(float(_87), float(_95)) * CustomBuffer._ShadowMap_TexelSize.xy)).x);
                    _95++;
                    continue;
                }
            }
            _130 = _84 * 0.111111111938953399658203125;
        }
        else
        {
            highp float _129;
            if (CustomBuffer._ShadowType == 1)
            {
                _129 = float((_76 - CustomBuffer._Bias) > texture(_ShadowMap, _72).x);
            }
            else
            {
                _129 = 0.0;
            }
            _130 = _129;
        }
        _131 = _130;
    }
    else
    {
        _131 = 0.0;
    }
    highp vec4 _134 = _59 * (1.0 - (_131 * 0.89999997615814208984375));
    highp float _170;
    if (CommbonRarelyBuffer._FogMode == 1)
    {
        _170 = clamp((CommbonRarelyBuffer._FogEnd - in_var_TEXCOORD2) / (CommbonRarelyBuffer._FogEnd - CommbonRarelyBuffer._FogStart), 0.0, 1.0);
    }
    else
    {
        highp float _169;
        if (CommbonRarelyBuffer._FogMode == 2)
        {
            _169 = exp(-(CommbonRarelyBuffer._FogDensity * in_var_TEXCOORD2));
        }
        else
        {
            highp float _168;
            if (CommbonRarelyBuffer._FogMode == 3)
            {
                _168 = exp((((-CommbonRarelyBuffer._FogDensity) * CommbonRarelyBuffer._FogDensity) * in_var_TEXCOORD2) * in_var_TEXCOORD2);
            }
            else
            {
                _168 = 1.0;
            }
            _169 = _168;
        }
        _170 = _169;
    }
    highp vec3 _176 = mix(CommbonRarelyBuffer._FogColor.xyz, _134.xyz, vec3(_170));
    out_var_SV_Target = vec4(_176.x, _176.y, _176.z, _134.w);
}

