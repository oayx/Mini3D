#version 100
precision mediump float;
precision highp int;

struct Light
{
    highp vec3 Dir;
    int Type;
    highp vec3 Color;
    highp vec3 Attenuation;
    highp float Range;
    highp vec3 Position;
    highp float SpotAngle;
};

struct type_LightBuffer
{
    int _LightCount;
    highp vec3 _LightDir0;
    highp vec3 _LightColor0;
    Light _Light[8];
};

uniform type_LightBuffer LightBuffer;

struct type_CommbonRarelyBuffer
{
    highp vec3 _LIGHTMODEL_AMBIENT;
    int _FogMode;
    highp vec4 _FogColor;
    highp float _FogStart;
    highp float _FogEnd;
    highp float _FogDensity;
};

uniform type_CommbonRarelyBuffer CommbonRarelyBuffer;

struct type_CustomBuffer
{
    highp mat4 MATRIX_MVP_LIGHT;
    highp vec4 _MainTex_ST;
    highp float _SpecularPower;
    highp vec4 _ShadowMap_TexelSize;
    highp float _Strength;
    highp float _Bias;
    int _ShadowType;
};

uniform type_CustomBuffer CustomBuffer;

uniform highp sampler2D _MainTex;
uniform highp sampler2D _NormalTexture;
uniform highp sampler2D _ShadowMap;

varying highp vec2 varying_TEXCOORD0;
varying highp mat3 varying_TEXCOORD1;
varying highp vec3 varying_TEXCOORD4;
varying highp vec3 varying_TEXCOORD5;
varying highp vec4 varying_TEXCOORD6;
varying highp float varying_TEXCOORD7;

void main()
{
    highp vec4 _88 = texture2D(_MainTex, varying_TEXCOORD0);
    highp vec4 _92 = texture2D(_NormalTexture, varying_TEXCOORD0);
    highp vec3 _97 = normalize(varying_TEXCOORD1 * ((_92.xyz * 2.0) - vec3(1.0)));
    highp float _121 = _88.w;
    highp float _197;
    if (CustomBuffer._ShadowType != 0)
    {
        highp vec2 _136 = ((varying_TEXCOORD6.xy / vec2(varying_TEXCOORD6.w)) * 0.5) + vec2(0.5);
        highp vec2 _138 = _136;
        _138.y = _136.y;
        highp float _142 = (0.5 * (varying_TEXCOORD6.z / varying_TEXCOORD6.w)) + 0.5;
        highp float _196;
        if (CustomBuffer._ShadowType == 2)
        {
            highp float _150;
            int _153;
            _150 = 0.0;
            _153 = -1;
            highp float _151;
            for (; _153 <= 1; _150 = _151, _153++)
            {
                _151 = _150;
                for (int _161 = -1; _161 <= 1; _151 += float((_142 - CustomBuffer._Bias) > texture2D(_ShadowMap, _138 + (vec2(float(_153), float(_161)) * CustomBuffer._ShadowMap_TexelSize.xy)).x), _161++)
                {
                }
            }
            _196 = _150 * 0.111111111938953399658203125;
        }
        else
        {
            highp float _195;
            if (CustomBuffer._ShadowType == 1)
            {
                _195 = float((_142 - CustomBuffer._Bias) > texture2D(_ShadowMap, _138).x);
            }
            else
            {
                _195 = 0.0;
            }
            _196 = _195;
        }
        _197 = _196;
    }
    else
    {
        _197 = 0.0;
    }
    highp float _239;
    if (CommbonRarelyBuffer._FogMode == 1)
    {
        _239 = clamp((CommbonRarelyBuffer._FogEnd - varying_TEXCOORD7) / (CommbonRarelyBuffer._FogEnd - CommbonRarelyBuffer._FogStart), 0.0, 1.0);
    }
    else
    {
        highp float _238;
        if (CommbonRarelyBuffer._FogMode == 2)
        {
            _238 = exp(-(CommbonRarelyBuffer._FogDensity * varying_TEXCOORD7));
        }
        else
        {
            highp float _237;
            if (CommbonRarelyBuffer._FogMode == 3)
            {
                _237 = exp((((-CommbonRarelyBuffer._FogDensity) * CommbonRarelyBuffer._FogDensity) * varying_TEXCOORD7) * varying_TEXCOORD7);
            }
            else
            {
                _237 = 1.0;
            }
            _238 = _237;
        }
        _239 = _238;
    }
    gl_FragData[0] = vec4(max((pow(max(mix(CommbonRarelyBuffer._FogColor.xyz, (vec4(((CommbonRarelyBuffer._LIGHTMODEL_AMBIENT + (LightBuffer._LightColor0 * vec3(max(0.0, dot(_97, varying_TEXCOORD5))))) + vec3(pow(max(0.0, dot(normalize(varying_TEXCOORD4 + varying_TEXCOORD5), _97)), exp2((CustomBuffer._SpecularPower * 10.0) + 1.0)))) * _88.xyz, _121).xyz * (1.0 - (_197 * CustomBuffer._Strength))).xyz, vec3(_239)).xyz, vec3(0.0)), vec3(0.4166666567325592041015625)) * 1.05499994754791259765625) - vec3(0.054999999701976776123046875), vec3(0.0)), _121);
}

